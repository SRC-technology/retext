// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var React = require("react");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var ReactDOMRe = require("reason-react/lib/js/src/ReactDOMRe.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var ReText_Sample = require("./ReText_Sample.bs.js");
var ReText_BestFit = require("./algorithms/ReText_BestFit.bs.js");

function spanStyle(bg, width) {
  return {
          backgroundColor: bg,
          display: "inline-block",
          height: "20px",
          width: Pervasives.string_of_float(width) + "px"
        };
}

function renderElement(el) {
  switch (el.tag | 0) {
    case 0 : 
        return React.createElement("span", {
                    style: spanStyle("red", el[0][/* width */0])
                  });
    case 1 : 
        return React.createElement("span", {
                    style: spanStyle("blue", el[0][/* width */0])
                  });
    case 2 : 
        return React.createElement("span", undefined);
    
  }
}

var component = ReasonReact.statelessComponent("Container");

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return React.createElement("div", {
                          style: {
                            backgroundColor: "beige",
                            overflow: "scroll",
                            width: "300px"
                          }
                        }, React.createElement("div", {
                              style: {
                                width: "50000"
                              }
                            }, $$Array.of_list(List.map((function (line) {
                                        return React.createElement("div", {
                                                    style: {
                                                      display: "inline-block"
                                                    }
                                                  }, $$Array.of_list(List.map(renderElement, line)));
                                      }), ReText_BestFit.$$break(ReText_Sample.elements, 300)))));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var C = /* module */[
  /* component */component,
  /* make */make
];

ReactDOMRe.renderToElementWithId(ReasonReact.element(undefined, undefined, make(/* array */[])), "app");

var S = 0;

exports.S = S;
exports.spanStyle = spanStyle;
exports.renderElement = renderElement;
exports.C = C;
/* component Not a pure module */
