// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");

function init(ls) {
  var _ls = ls;
  var _acc = /* [] */0;
  while(true) {
    var acc = _acc;
    var ls$1 = _ls;
    if (ls$1) {
      var els = ls$1[1];
      if (els) {
        _acc = /* :: */Block.simpleVariant("::", [
            ls$1[0],
            acc
          ]);
        _ls = els;
        continue ;
      } else {
        return acc;
      }
    } else {
      return acc;
    }
  };
}

function last(ls, el) {
  var match = List.length(ls) === 0;
  if (match) {
    return el;
  } else {
    return List.nth(ls, List.length(ls) - 1 | 0);
  }
}

var List$1 = /* module */Block.localModule([
    "length",
    "hd",
    "tl",
    "nth",
    "rev",
    "append",
    "rev_append",
    "concat",
    "flatten",
    "iter",
    "iteri",
    "map",
    "mapi",
    "rev_map",
    "fold_left",
    "fold_right",
    "iter2",
    "map2",
    "rev_map2",
    "fold_left2",
    "fold_right2",
    "for_all",
    "exists",
    "for_all2",
    "exists2",
    "mem",
    "memq",
    "find",
    "filter",
    "find_all",
    "partition",
    "assoc",
    "assq",
    "mem_assoc",
    "mem_assq",
    "remove_assoc",
    "remove_assq",
    "split",
    "combine",
    "sort",
    "stable_sort",
    "fast_sort",
    "sort_uniq",
    "merge",
    "init",
    "last"
  ], [
    List.length,
    List.hd,
    List.tl,
    List.nth,
    List.rev,
    List.append,
    List.rev_append,
    List.concat,
    List.flatten,
    List.iter,
    List.iteri,
    List.map,
    List.mapi,
    List.rev_map,
    List.fold_left,
    List.fold_right,
    List.iter2,
    List.map2,
    List.rev_map2,
    List.fold_left2,
    List.fold_right2,
    List.for_all,
    List.exists,
    List.for_all2,
    List.exists2,
    List.mem,
    List.memq,
    List.find,
    List.filter,
    List.find_all,
    List.partition,
    List.assoc,
    List.assq,
    List.mem_assoc,
    List.mem_assq,
    List.remove_assoc,
    List.remove_assq,
    List.split,
    List.combine,
    List.sort,
    List.stable_sort,
    List.fast_sort,
    List.sort_uniq,
    List.merge,
    init,
    last
  ]);

exports.List = List$1;
/* No side effect */
